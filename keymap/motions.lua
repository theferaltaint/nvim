local Builder = require("keymap.builder")

---@class Motion : Builder
local Motion = Builder:extend()
Motion.__index = Motion

-- Cursor Motions
Motion.CursorUp = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("k")
    :Action("k")
    :Desc("Move cursor up one line")

Motion.CursorDown = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("j")
    :Action("j")
    :Desc("Move cursor down one line")

Motion.CursorLeft = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("h")
    :Action("h")
    :Desc("Move cursor left one character")

Motion.CursorRight = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("l")
    :Action("l")
    :Desc("Move cursor right one character")

-- Word Motions
Motion.WordForward = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("w")
    :Action("w")
    :Desc("Move to beginning of next word")

Motion.WordEnd = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("e")
    :Action("e")
    :Desc("Move to end of current/next word")

Motion.WordBackward = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("b")
    :Action("b")
    :Desc("Move to beginning of previous word")

Motion.WordEndBackward = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Multikey("g", "e")
    :Action("ge")
    :Desc("Move to end of previous word")

Motion.BigWordForward = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("W")
    :Action("W")
    :Desc("Move to beginning of next WORD")

Motion.BigWordEnd = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("E")
    :Action("E")
    :Desc("Move to end of current/next WORD")

Motion.BigWordBackward = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("B")
    :Action("B")
    :Desc("Move to beginning of previous WORD")

Motion.BigWordEndBackward = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Multikey("g", "E")
    :Action("gE")
    :Desc("Move to end of previous WORD")

-- Line Motions
Motion.LineStart = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("0")
    :Action("0")
    :Desc("Move to beginning of line")

Motion.FirstNonBlank = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("^")
    :Action("^")
    :Desc("Move to first non-blank character")

Motion.LineEnd = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("$")
    :Action("$")
    :Desc("Move to end of line")

Motion.LastNonBlank = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Multikey("g", "_")
    :Action("g_")
    :Desc("Move to last non-blank character")

-- Paragraph Motions
Motion.ParagraphForward = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("}")
    :Action("}")
    :Desc("Move forward to next paragraph")

Motion.ParagraphBackward = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("{")
    :Action("{")
    :Desc("Move backward to previous paragraph")

-- Sentence Motions
Motion.SentenceForward = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key(")")
    :Action(")")
    :Desc("Move forward to next sentence")

Motion.SentenceBackward = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("(")
    :Action("(")
    :Desc("Move backward to previous sentence")

-- Screen Line Motions
Motion.DownScreenLine = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Multikey("g", "j")
    :Action("gj")
    :Desc("Move down by screen line")

Motion.UpScreenLine = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Multikey("g", "k")
    :Action("gk")
    :Desc("Move up by screen line")

Motion.FirstScreenLine = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("H")
    :Action("H")
    :Desc("Move to top of screen")

Motion.MiddleScreenLine = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("M")
    :Action("M")
    :Desc("Move to middle of screen")

Motion.LastScreenLine = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("L")
    :Action("L")
    :Desc("Move to bottom of screen")

-- File Navigation
Motion.TopOfFile = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Multikey("g", "g")
    :Action("gg")
    :Desc("Go to top of file")

Motion.BottomOfFile = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("G")
    :Action("G")
    :Desc("Go to bottom of file")

Motion.GotoLine = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Action("{n}G")
    :Desc("Go to specific line number")

-- Search Navigation
Motion.FindChar = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("f")
    :Action("f")
    :Desc("Find character forward")

Motion.FindCharBackward = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("F")
    :Action("F")
    :Desc("Find character backward")

Motion.TillChar = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("t")
    :Action("t")
    :Desc("Till character forward")

Motion.TillCharBackward = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key("T")
    :Action("T")
    :Desc("Till character backward")

Motion.RepeatCharSearch = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key(";")
    :Action(";")
    :Desc("Repeat last character search")

Motion.RepeatCharSearchBackward = Builder:New()
    :NormalMode()
    :VisualMode()
    :OperatorMode()
    :Key(",")
    :Action(",")
    :Desc("Repeat last character search backward")

return Motion
